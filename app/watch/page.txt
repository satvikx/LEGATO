"use client";

import React, { useState, useEffect } from 'react';
import { Card } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { ChevronLeft, ChevronRight } from 'lucide-react';

const WatchPage = () => {
  const [currentVideo, setCurrentVideo] = useState(null);
  const [videos, setVideos] = useState([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    const fetchVideos = async () => {
      try {
        const response = await fetch('/api/videos');
        const data = await response.json();
        setVideos(data);
        if (data.length > 0) {
          setCurrentVideo(data[0]);
        }
        console.log('Fetched videos:', data[0].title);
        setLoading(false);
      } catch (error) {
        console.error('Error fetching videos:', error);
        setLoading(false);
      }
    };

    fetchVideos();
  }, []);

  const handleNextVideo = () => {
    const currentIndex = videos.findIndex(v => v.id === currentVideo.id);
    if (currentIndex < videos.length - 1) {
      setCurrentVideo(videos[currentIndex + 1]);
    }
  };

  const handlePreviousVideo = () => {
    const currentIndex = videos.findIndex(v => v.id === currentVideo.id);
    if (currentIndex > 0) {
      setCurrentVideo(videos[currentIndex - 1]);
    }
  };

  if (loading) {
    return <div className="flex items-center justify-center h-screen">Loading...</div>;
  }

  return (
    <div className="container mx-auto p-4">
      <div className="grid grid-cols-1 lg:grid-cols-2 gap-4">
        {/* Video Section */}
        <Card className="p-4">
          <div className="aspect-video bg-black rounded-lg overflow-hidden">
            {currentVideo && (
              <video
                className="w-full h-full"
                controls
                src={`/api/videos/${currentVideo.id}`}
              />
            )}
          </div>
          <div className="flex justify-between mt-4">
            <Button
              variant="outline"
              onClick={handlePreviousVideo}
              disabled={videos.indexOf(currentVideo) === 0}
            >
              <ChevronLeft className="w-4 h-4 mr-2" />
              Previous
            </Button>
            <Button
              variant="outline"
              onClick={handleNextVideo}
              disabled={videos.indexOf(currentVideo) === videos.length - 1}
            >
              Next
              <ChevronRight className="w-4 h-4 ml-2" />
            </Button>
          </div>
        </Card>

        {/* PDF Section */}
        <Card className="p-4">
          <div className="h-[calc(100vh-2rem)] bg-gray-50 rounded-lg">
            {currentVideo?.pdfUrl && (
              <iframe
                src={currentVideo.pdfUrl}
                className="w-full h-full rounded-lg"
                title="PDF Viewer"
              />
            )}
          </div>
        </Card>
      </div>
    </div>
  );
};

export default WatchPage;